     - name: adding tag
       ec2_tag: resource={{ item.instances[0].id }} region={{ region }} state=present
       args:
          tags:
              Name: "{{ Server | lower }}_{{ Env | lower }}_{{ item.item }}"
       with_items: ec2.results

     - name: adding DNS A record
       route53:
            command: create
            private_zone: true
            zone: "{{ domain }}"
            record: "{{ Server | lower }}_{{ Env | lower }}_{{  item.item }}.{{ domain }}"
            type: A
            ttl: 60
            value: "{{ item.instances[0].private_ip}}"
            overwrite: yes
       with_items: ec2.results

     - name: adding DNS PTR record
       route53:
            command: create
            private_zone: true
            zone: "{{ rev_domain }}"
            record: "{% for i in item.instances[0].private_ip.split('.')| reverse %}{{ i }}.{% endfor %}in-addr.arpa."
            type: PTR
            ttl: 60
            value: "{{ Server | lower }}_{{ Env | lower }}_{{  item.item }}.{{ domain }}"
            overwrite: yes
       with_items: ec2.results

     - name: Create and attach volume
      # Create new volume using SSD storage
       ec2_vol:
          region: "{{ region }}"
          instance: "{{ item.instances[0].id }}"
          volume_size: "{{ ebs_size }}"
          volume_type: gp2
          device_name: /dev/xvdf
       with_items: ec2.results
       when: "{{ ebs }}"
       ignore_errors: true

     - name: Add new instances to host group
       add_host: name="{{ Server | lower }}_{{ Env | lower }}_{{  item.item }}.{{ domain }}" groupname=tag_Name_{{ Server  }} Server={{ Server }}
       with_items: ec2.results
       
            - name: waiting for dns hostname
       local_action: shell host "{{ Server | lower }}_{{ Env | lower }}_{{  item.item }}.{{ domain }}"
       register: dns_status
       until: dns_status.stdout.find("{{ item.instances[0].private_ip}}") != -1
       retries: 12
       delay: 10
       with_items: ec2.results

     - local_action:
          lineinfile
          line="{{ Server }}{{':'}} {{ item.instances[0].private_ip }} {{ item.instances[0].id}}"
          dest="./vars"
          create=yes
       with_items: ec2.results

     - set_fact: ebs_vol="{{ ebs_size }}"
       when: "{{ ebs }}"

     - name: check ssh connection
       wait_for: host={{ item.instances[0].private_dns_name }} port=22 delay=10 timeout=160 state=started
       with_items: ec2.results

